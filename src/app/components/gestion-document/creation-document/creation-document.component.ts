import { HttpClient } from '@angular/common/http';
import { Component } from '@angular/core';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';
import { Article } from 'src/app/core/models/article.model';
import { Categorie, Theme ,Type} from 'src/app/core/models/categorie.model';
import { ArticleService } from 'src/app/core/services/article.service';
import { CategorieService } from 'src/app/core/services/categorie.service';

@Component({
  selector: 'app-creation-document',
  templateUrl: './creation-document.component.html',
  styleUrls: ['./creation-document.component.css']
})
export class CreationDocumentComponent {
  
   
  categories!: Categorie[];
  themes!: Theme[];
  types!: Type[];

  selectedCategorieName: string='';
  selectedThemeName: string='';
  selectedTypeName: string='';

	documentForm!: FormGroup;

  selectedOption: string = 'file';

  constructor(private categorieService: CategorieService,
    private articleService: ArticleService, 
    private fb: FormBuilder,
    private http: HttpClient
    ) { }

  ngOnInit() {
    this.categorieService.getCategories().subscribe(categorie => {
      this.categories = categorie;
    });
    this.documentForm = this.fb.group({
      titre: ['', Validators.required],
      reference: [0, Validators.required],
      date_publication: ['', Validators.required],
      abstract: ['', Validators.required],
      tags: ['', Validators.required],
      categorie: ['', Validators.required],
      type: ['', Validators.required],
      theme: ['', Validators.required],
      textFichier: ['', Validators.required],
      fichier: [[]],
  });
  }

  onCategorieChange() {
    
    // Récupérer les thèmes
    this.categorieService.getThemesByCategorieName(this.selectedCategorieName).subscribe((themes) => {
      this.themes = themes;
    });
  
    // Récupérer les types
    this.categorieService.getTypesByCategorieName(this.selectedCategorieName).subscribe((types) => {
      this.types = types;
    });
  }
  //creation un document 

  onSubmit() {

    const document: Article = {
      id: 0, // id will be generated by json-server
      ...this.documentForm.value,

      date: new Date()
    };
    this.articleService.create(document).subscribe();
    this.documentForm.reset();
    alert('Le document a été créé avec succès');
    
  }
  
  }
  

 